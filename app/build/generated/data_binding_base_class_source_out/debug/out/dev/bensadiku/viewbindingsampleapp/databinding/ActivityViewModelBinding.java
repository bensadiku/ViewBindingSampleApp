// Generated by view binder compiler. Do not edit!
package dev.bensadiku.viewbindingsampleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import dev.bensadiku.viewbindingsampleapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityViewModelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final Button viewModelButtonNextActivity;

  @NonNull
  public final Button viewModelButtonTap;

  @NonNull
  public final TextView viewModelTapNum;

  private ActivityViewModelBinding(@NonNull ConstraintLayout rootView, @NonNull TextView textView,
      @NonNull TextView textView2, @NonNull Button viewModelButtonNextActivity,
      @NonNull Button viewModelButtonTap, @NonNull TextView viewModelTapNum) {
    this.rootView = rootView;
    this.textView = textView;
    this.textView2 = textView2;
    this.viewModelButtonNextActivity = viewModelButtonNextActivity;
    this.viewModelButtonTap = viewModelButtonTap;
    this.viewModelTapNum = viewModelTapNum;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewModelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewModelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_model, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewModelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView textView = rootView.findViewById(R.id.textView);
      if (textView == null) {
        missingId = "textView";
        break missingId;
      }
      TextView textView2 = rootView.findViewById(R.id.textView2);
      if (textView2 == null) {
        missingId = "textView2";
        break missingId;
      }
      Button viewModelButtonNextActivity = rootView.findViewById(R.id.viewModelButtonNextActivity);
      if (viewModelButtonNextActivity == null) {
        missingId = "viewModelButtonNextActivity";
        break missingId;
      }
      Button viewModelButtonTap = rootView.findViewById(R.id.viewModelButtonTap);
      if (viewModelButtonTap == null) {
        missingId = "viewModelButtonTap";
        break missingId;
      }
      TextView viewModelTapNum = rootView.findViewById(R.id.viewModelTapNum);
      if (viewModelTapNum == null) {
        missingId = "viewModelTapNum";
        break missingId;
      }
      return new ActivityViewModelBinding((ConstraintLayout) rootView, textView, textView2,
          viewModelButtonNextActivity, viewModelButtonTap, viewModelTapNum);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
